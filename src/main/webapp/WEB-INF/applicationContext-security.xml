<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Bean for bcrypt password encoding -->
    <bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- BEGIN SECURITY CONFIGURATION -->
    <security:http use-expressions="true">
        <security:intercept-url pattern="/movie/admin/**" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/movie/user/**" access="hasRole('USER')"/>

        <!-- We don't need to write a mapping for "authenticate"
        Spring understands how to process login if we follow name conventions -->
        <security:form-login login-page="/showLoginForm"
                             login-processing-url="/authenticate"
                             authentication-failure-url="/showLoginForm?error=true"
                             username-parameter="username"
                             password-parameter="password"
                             default-target-url="/movie/list"/>
        <security:logout logout-url="/logout"
                         logout-success-url="/showLoginForm?logout=true"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="myDataSource"/>
            <security:password-encoder ref="bcryptEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- END SECURITY CONFIGURATION -->
</beans>